const OpenAI = require("openai");
const twilio = require("twilio");

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });

const squareLink = 'https://secure-life-insurance-agency-llc.square.site';

module.exports.handler = async function (context, event, callback) {
Â Â const twiml = new twilio.twiml.VoiceResponse();
Â Â const userInput = event.SpeechResult?.trim() || '';
Â Â const phone = event.From || '';

Â Â // Ask for language if not selected
Â Â if (!event.languageSelected) {
Â Â Â Â const gather = twiml.gather({
Â Â Â Â Â Â input: 'dtmf',
Â Â Â Â Â Â numDigits: 1,
Â Â Â Â Â Â action: '/voice?languageSelected=true',
Â Â Â Â Â Â method: 'POST'
Â Â Â Â });
Â Â Â Â gather.say("Welcome to Secure Life Insurance Agency. Press 1 for English. Presione 2 para espaÃ±ol.");
Â Â Â Â return callback(null, twiml);
Â Â }

Â Â // Language based on key press
Â Â const lang = event.Digits === '2' ? 'spanish' : 'english';
Â Â const voice = lang === 'spanish' ? 'shimmer' : 'nova';

Â Â const systemPrompt = `
You are Ava, a bilingual AI receptionist for Secure Life Insurance Agency.
Speak in ${lang}, naturally, like a real human assistant.
Your job is to:
- Greet the caller
- Ask for their name
- Help with quotes (auto, home, health, commercial)
- Schedule appointments using this link: ${squareLink}
- Offer to send the link via SMS if needed
- Sound professional, friendly, and human-like using OpenAI's tts-1-hd voice
- If speaking Spanish, keep it clear and neutral
`;

Â Â try {
Â Â Â Â // Get AI-generated reply
Â Â Â Â const completion = await openai.chat.completions.create({
Â Â Â Â Â Â model: 'gpt-4o',
Â Â Â Â Â Â messages: [
Â Â Â Â Â Â Â Â { role: 'system', content: systemPrompt },
Â Â Â Â Â Â Â Â { role: 'user', content: userInput || 'Start the call conversation naturally.' }
Â Â Â Â Â Â ]
Â Â Â Â });

Â Â Â Â const replyText = completion.choices[0].message.content;

Â Â Â Â // Convert text to speech
Â Â Â Â const tts = await openai.audio.speech.create({
Â Â Â Â Â Â model: 'tts-1-hd',
Â Â Â Â Â Â voice: voice,
Â Â Â Â Â Â input: replyText
Â Â Â Â });

Â Â Â Â const buffer = Buffer.from(await tts.arrayBuffer());
Â Â Â Â const audioBase64 = buffer.toString('base64');

Â Â Â Â // Play AI reply
Â Â Â Â const gather = twiml.gather({
Â Â Â Â Â Â input: 'speech',
Â Â Â Â Â Â speechTimeout: 'auto',
Â Â Â Â Â Â action: '/voice?languageSelected=true',
Â Â Â Â Â Â method: 'POST'
Â Â Â Â });

Â Â Â Â gather.play({ loop: 1 }, `data:audio/mpeg;base64,${audioBase64}`);

Â Â Â Â // Send Square link via SMS
Â Â Â Â if (phone) {
Â Â Â Â Â Â const client = twilio(context.ACCOUNT_SID, context.AUTH_TOKEN);
Â Â Â Â Â Â await client.messages.create({
Â Â Â Â Â Â Â Â body: `Secure Life: Book your appointment here ðŸ‘‰ ${squareLink}`,
Â Â Â Â Â Â Â Â from: context.TWILIO_PHONE_NUMBER,
Â Â Â Â Â Â Â Â to: phone
Â Â Â Â Â Â });
Â Â Â Â }

Â Â Â Â return callback(null, twiml);
Â Â } catch (err) {
Â Â Â Â console.error("AI Error:", err.message);
Â Â Â Â twiml.say("I'm sorry. Something went wrong. Please try again later.");
Â Â Â Â return callback(null, twiml);
Â Â }
};
